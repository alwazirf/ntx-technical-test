1.  ChatGPT Instruction : How to filter data using pandas library to get data not null in dataFrame
    ChatGPT Result: df[df['Name'].notna()] -> df['Name'].notna(): Creates a boolean mask that is True for rows where the 'Name' column is not null.

2.  ChatGPT Instruction: how to convert string time to date_time format YYYY-MM-DD using pandas
    ChatGPT Result: # Convert the 'time' column to datetime
    df['date'] = pd.to_datetime(df['date'], format='%Y%m%d')

3.  ChatGPT Instruction: grouping data using pandas by date
    ChatGPT Result: grouped = df.groupby('date').agg({'value': 'sum'}).reset_index()

4.  ChatGPT Instruction: What methods can be used to detect transaction data anomalies in certain products?
    ChatGPT Result:
    1. Statistical Methods: Z-Score or Standard Deviation Analysis, Moving Average, Time-Series Analysis
    2. Rule-Based Methods: Thresholds, Conditional Rules
    3. Machine Learning Models: Supervised Learning, Unsupervised Learning, Anomaly Detection Algorithms
    4. Pattern Recognition and Behavioral Analytics: Transaction Profiling, Sequence Analysis, Change Point Detection
    5. Data Visualization: Scatter Plots, Heatmaps, Box Plots
    6. Graph-Based Techniques: Graph Anomaly Detection, Community Detection
    7. Contextual Anomaly Detection: Contextual Outliers
    8. Real-Time Monitoring and Alerts: Event-Driven Systems, Stream Processing Frameworks

5.  ChatGPT Instruction: seems interesting, which method is easiest to implement using the pandas library
    ChatGPT Result:
    Why These Methods Are Easy with Pandas:
        1. Z-Score/Standard Deviation: Pandas has built-in functions for calculating mean and standard deviation making Z-score computation straightforward.
        2. Threshold-Based Rules: This method involves simple comparisons, which are very easy to implement using Pandasâ€™ conditional filtering.
        3. Moving Average: Pandas provides a rolling() method, allowing for seamless calculation of moving averages.
        4. Percentiles: Pandas' quantile() method simplifies percentile calculations and enables robust outlier detection without much complexity.

6.  ChatGPT Instruction: Detect anomalies based on predefined rules or thresholds.
    ChatGPT Result:
    Steps:
    1. Set Thresholds: Define thresholds based on historical data or domain knowledge.
    2. Apply Rules: Flag transactions that exceed or fall below these thresholds.
    Example:
    # Define thresholds (e.g., 3 standard deviations from the mean)
    threshold_upper = daily_transactions['transaction_count'].mean() + 3 * daily_transactions['transaction_count'].std()
    threshold_lower = daily_transactions['transaction_count'].mean() - 3 * daily_transactions['transaction_count'].std()
    # Detect anomalies
    anomalies_rules = daily_transactions[(daily_transactions['transaction_count'] > threshold_upper) | (daily_transactions['transaction_count'] < threshold_lower)]

7. 